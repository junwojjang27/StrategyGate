<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="base.strategy.strategy">
	<select id="selectList" parameterType="strategyVO" resultType="strategyVO">
		/*	전략목표 조회	strategy.selectList */
		SELECT	A.YEAR,
				A.STRATEGY_ID,
				A.STRATEGY_NM,
				A.PERSPECTIVE_ID,
				B.PERSPECTIVE_NM,
				A.UP_STRATEGY_ID,
				C.STRATEGY_NM AS UP_STRATEGY_NM,
				CASE WHEN A.DELETE_DT IS NULL THEN 'Y' ELSE 'N' END AS USE_YN,
				A.SORT_ORDER,
				(SELECT COUNT(1) FROM BSC_METRIC D
					WHERE  A.YEAR = D.YEAR
					AND A.STRATEGY_ID = D.STRATEGY_ID
					AND D.DELETE_DT IS NULL) AS CNT_STRATEGY
		FROM	BSC_STRATEGY A
				LEFT	OUTER JOIN BSC_PERSPECTIVE B
					ON	A.YEAR = B.YEAR
					AND A.PERSPECTIVE_ID = B.PERSPECTIVE_ID
					AND B.DELETE_DT IS NULL
				LEFT OUTER JOIN BSC_STRATEGY C
					ON	A.YEAR = C.YEAR
					AND A.UP_STRATEGY_ID = C.STRATEGY_ID
					AND C.DELETE_DT IS NULL
		WHERE	A.YEAR = #{findYear}
			<if test='findUseYn == null or findUseYn == "Y"'>
			AND A.DELETE_DT IS NULL
			</if>
			<if test='findUseYn != null and findUseYn == "N"'>
			AND A.DELETE_DT IS NOT NULL
			</if>
		ORDER BY B.SORT_ORDER,A.SORT_ORDER
	</select>

	<select id="selectUpStrategyList" parameterType="strategyVO" resultType="strategyVO">
		/*	상위전략목표 상세 조회		strategy.selectUpStrategyList	*/
		SELECT	STRATEGY_ID AS UP_STRATEGY_ID,
				STRATEGY_NM AS UP_STRATEGY_NM
		FROM	BSC_STRATEGY
		WHERE	YEAR = #{findYear}
			AND	DELETE_DT IS NULL
		ORDER BY	SORT_ORDER
	</select>

	<select id="selectPerspectiveList" parameterType="strategyVO" resultType="strategyVO">
		/*	관점 상세 조회		strategy.selectPerspectiveList	*/
		SELECT	PERSPECTIVE_ID,
				PERSPECTIVE_NM
		FROM	BSC_PERSPECTIVE
		WHERE	YEAR = #{findYear}
			AND DELETE_DT IS NULL
		ORDER BY	SORT_ORDER
	</select>

	<update id="deleteStrategy" parameterType="strategyVO">
		/* 전략목표 삭제		strategy.deleteStragtegy	*/
		UPDATE	BSC_STRATEGY
			SET	DELETE_DT = SYSDATE
		WHERE	YEAR = #{findYear}
			AND STRATEGY_ID IN
			<foreach collection="keys" item="key" open="(" close=")" separator=",">
				#{key}
			</foreach>
	</update>

	<insert id="insertData" parameterType="strategyVO">
		/*	전략목표 저장	strategy.insertData	*/
		INSERT	INTO	BSC_STRATEGY	(
			YEAR,
			STRATEGY_ID,
			STRATEGY_NM,
			PERSPECTIVE_ID,
			UP_STRATEGY_ID,
			SORT_ORDER,
			CREATE_DT,
			MODIFY_DT,
			DELETE_DT
		) VALUES (
			#{year},
			#{strategyId},
			#{strategyNm},
			#{perspectiveId},
			#{upStrategyId},
			#{sortOrder},
			SYSDATE,
			NULL,
			CASE WHEN #{useYn} = 'Y' THEN NULL ELSE SYSDATE END
		)
	</insert>

	<update id="updateData" parameterType="strategyVO">
		/*	전략목표 수정	strategy.updateData	*/
		UPDATE	BSC_STRATEGY
			SET	STRATEGY_NM = #{strategyNm},
				PERSPECTIVE_ID = #{perspectiveId},
				UP_STRATEGY_ID = #{upStrategyId},
				SORT_ORDER = #{sortOrder},
				MODIFY_DT = SYSDATE,
				DELETE_DT = CASE WHEN #{useYn} = 'Y' THEN NULL ELSE SYSDATE END
		WHERE	YEAR = #{year}
			AND	STRATEGY_ID = #{strategyId}
	</update>
</mapper>