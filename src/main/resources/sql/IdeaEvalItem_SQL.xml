<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="system.menu.ideaEvalItem">
	<select id="selectList" parameterType="ideaEvalItemVO" resultType="ideaEvalItemVO">
		/*	평가항목관리 조회	system.menu.ideaEvalItem.selectList */
		SELECT
			A.EVAL_ITEM_CD,
			A.YEAR,
			A.EVAL_DEGREE_ID,
		    A.EVAL_ITEM_TITLE,
			A.PARTICAL_TYPE_ID,
			A.WEIGHT_ID,
			TO_CHAR(A.CREATE_DT, 'YYYY.MM.DD') AS CREATE_DT,
			A.UPDATE_DT,
			A.DELETE_DT,
			A.EVAL_ITEM_CONTENT
		FROM IDEA_EVAL_ITEM A
		WHERE A.YEAR = #{findYear}
			<if test='findUseYn == null or findUseYn == "Y"'>
				AND A.DELETE_DT IS NULL
			</if>
			<if test='findUseYn != null and findUseYn == "N"'>
				AND A.DELETE_DT IS NOT NULL
			</if>
			<if test='findEvalDegreeId != null and findEvalDegreeId == "001"'>
				AND A.EVAL_DEGREE_ID = '001'
			</if>
			<if test='findEvalDegreeId != null and findEvalDegreeId == "002"'>
				AND A.EVAL_DEGREE_ID = '002'
			</if>
			<if test='findEvalDegreeId != null and findEvalDegreeId == "003"'>
				AND A.EVAL_DEGREE_ID = '003'
			</if>
		ORDER BY	A.CREATE_DT ASC	<!--생성날짜를 기준으로 오름차순 정렬-->
	</select>
	
	<select id="selectDetail" parameterType="ideaEvalItemVO" resultType="ideaEvalItemVO">
		/*	평가항목관리 상세 조회	 	system.menu.ideaEvalItem.selectDetail	*/
		SELECT
			EVAL_ITEM_CD,
			YEAR,
			EVAL_DEGREE_ID,
			EVAL_ITEM_TITLE,
			PARTICAL_TYPE_ID,
			WEIGHT_ID,
			CREATE_DT,
			UPDATE_DT,
			DELETE_DT,
			EVAL_ITEM_CONTENT
		FROM IDEA_EVAL_ITEM
		WHERE 1=1
			AND EVAL_ITEM_CD=#{evalItemCd}
			AND YEAR=#{year}
			AND EVAL_DEGREE_ID=#{evalDegreeId}
	</select>

	<select id="selectExcelList" parameterType="ideaEvalItemVO" resultType="ideaEvalItemVO">
		/* 평가항목관리 엑셀용 조회 system.menu.ideaEvalItem.selectExcelList */
		SELECT
		A.EVAL_ITEM_CD,
		A.YEAR,
	    CA.CODE_NM AS EVAL_DEGREE_ID,
		/*A.EVAL_DEGREE_ID,*/
		A.EVAL_ITEM_TITLE,
		CB.CODE_NM AS PARTICAL_TYPE_ID,
		/*A.PARTICAL_TYPE_ID,*/
		A.WEIGHT_ID,
		TO_CHAR(A.CREATE_DT, 'YYYY.MM.DD') AS CREATE_DT,
		A.UPDATE_DT,
		TO_CHAR(A.DELETE_DT, 'YYYY.MM.DD') AS DELETE_DT,
		A.EVAL_ITEM_CONTENT
		FROM IDEA_EVAL_ITEM A
			<include refid="common.func.getCodeJoin">    <!--평가차수 코드를 해당하는 문자로 변경-->
				<property name="pYear" value="#{findYear}"/>
				<property name="pCodeGrpId" value="'387'"/>
				<property name="pAlias" value="CA"/>
				<property name="pCompareColumn" value="A.EVAL_DEGREE_ID"/>
			</include>
			<include refid="common.func.getCodeJoin">    <!--평가자구분 코드를 해당하는 문자로 변경-->
				<property name="pYear" value="#{findYear}"/>
				<property name="pCodeGrpId" value="'386'"/>
				<property name="pAlias" value="CB"/>
				<property name="pCompareColumn" value="A.PARTICAL_TYPE_ID"/>
			</include>
		WHERE 1=1
		ORDER BY	A.YEAR , A.EVAL_DEGREE_ID , A.DELETE_DT DESC, A.WEIGHT_ID DESC
	</select>

	<update id="updateSortOrder" parameterType="ideaEvalItemVO">
	    /*	평가항목관리 정렬순서저장	 ideaEvalItem.updateSortOrder	*/
		UPDATE	IDEA_EVAL_ITEM
		SET	SORT_ORDER = #{sortOrder}
		WHERE	YEAR = #{year}
		  AND	EVAL_ITEM_CD = #{evalItemCd}
	</update>

	
	<update id="deleteIdeaEvalItem" parameterType="ideaEvalItemVO">
		/*	평가항목관리 삭제	system.menu.ideaEvalItem.deleteIdeaEvalItem	*/
		UPDATE IDEA_EVAL_ITEM A
		SET
			A.DELETE_DT = CASE WHEN #{findUseYn} = 'N' THEN NULL ELSE SYSDATE END
		WHERE A.YEAR = #{findYear}
			AND A.EVAL_ITEM_CD IN
			<foreach collection="keys" item="key" open="(" close=")" separator=",">
				#{key}
			</foreach>

	</update>

	<insert id="insertData" parameterType="ideaEvalItemVO">
		/*	평가항목관리 저장	system.menu.ideaEvalItem.insertData	*/
		INSERT INTO IDEA_EVAL_ITEM(
			EVAL_ITEM_CD,
			YEAR,
			EVAL_DEGREE_ID,
			EVAL_ITEM_TITLE,
			PARTICAL_TYPE_ID,
			WEIGHT_ID,
			CREATE_DT,
			UPDATE_DT,
			DELETE_DT,
			EVAL_ITEM_CONTENT)
		VALUES (
			#{evalItemCd},
			#{year},
			#{evalDegreeId},
			#{evalItemTitle},
			#{particalTypeId},
			#{weightId},
			SYSDATE,
			#{updateDt},
			#{deleteDt},
			#{evalItemContent})
	</insert>

	<update id="updateData" parameterType="ideaEvalItemVO">
		/*	평가항목관리 수정	system.menu.ideaEvalItem.updateData	*/
		UPDATE IDEA_EVAL_ITEM
		SET
			EVAL_ITEM_TITLE=#{evalItemTitle},
			PARTICAL_TYPE_ID=#{particalTypeId},
			WEIGHT_ID=#{weightId},
			UPDATE_DT=SYSDATE,
			DELETE_DT=#{deleteDt},
			EVAL_ITEM_CONTENT=#{evalItemContent}
		WHERE 1=1
			AND EVAL_ITEM_CD=#{evalItemCd}
			AND YEAR=#{year}
			AND EVAL_DEGREE_ID=#{evalDegreeId}
	</update>
</mapper>

