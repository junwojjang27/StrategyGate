<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="example">
	<!--
	==================================================================
	# 설명	: 관점설정 목록 보기
	#	기능	: SELECT
	#	TABLE	: EXAMPLE_PERSPECTIVE
	==================================================================
	-->
	<select id="selectList" parameterType="exampleVO" resultType="exampleVO">
		/* 관점설정 목록 조회	example.selectList */
		<include refid="selectListQuery"/>
	</select>
	
	<sql id="selectListQuery">
		SELECT
				A.YEAR, A.PERSPECTIVE_ID, A.PERSPECTIVE_NM, A.SORT_ORDER,
				A.ETC,	TO_CHAR(A.CREATE_DT, 'YYYY.MM.DD')	AS CREATE_DT,
				DECODE(A.DELETE_DT, NULL, 'Y', 'N')	AS USE_YN,	A.AMT,
				A.USER_ID,	A.USER_NM
		FROM	EXAMPLE_PERSPECTIVE A
		WHERE	YEAR = #{findYear}
		ORDER BY	
			<choose>
				<when test='sidx == "perspectiveId"'>
					A.PERSPECTIVE_ID
				</when>
				<when test='sidx == "perspectiveNm"'>
					A.PERSPECTIVE_NM
				</when>
				<when test='sidx == "etc"'>
					A.ETC
				</when>
				<when test='sidx == "sortOrder"'>
					A.SORT_ORDER
				</when>
				<when test='sidx == "createDt"'>
					A.CREATE_DT
				</when>
				<when test='sidx == "amt"'>
					A.AMT
				</when>
				<otherwise>
					A.SORT_ORDER
				</otherwise>
			</choose>
			<choose>
				<when test='sord == "DESC" or sord == "desc"'>
					DESC
				</when>
				<otherwise>
					ASC
				</otherwise>
			</choose>
	</sql>
	
	<select id="selectListCount" parameterType="exampleVO" resultType="int">
		/* 관점설정 목록수	example.selectListCount */
		SELECT	COUNT(1)
		FROM	(
			<include refid="selectListQuery"/>
		)
	</select>
	
	<select id="selectListPaging" parameterType="exampleVO" resultType="exampleVO">
		/* 관점설정 목록 조회 (페이징)	example.selectListPaging */
		SELECT T.*
		FROM (
			<include refid="common.pagingHeader"/>
			<include refid="selectListQuery"/>
			<include refid="common.pagingFooter"/>
		) T
	</select>

	<insert id="insertData" parameterType="exampleVO">
		/*	관점설정 저장	example.insertData	*/
		INSERT	INTO	EXAMPLE_PERSPECTIVE	(
			YEAR,		PERSPECTIVE_ID,
			PERSPECTIVE_NM,	SORT_ORDER,	CREATE_DT,
			DELETE_DT,		ETC,		AMT,
			USER_ID,		USER_NM
		) VALUES (
			#{year},		#{perspectiveId},
			#{perspectiveNm},	#{sortOrder},	SYSDATE,
			DECODE(#{useYn}, 'Y', NULL, SYSDATE),	#{etc},	#{amt},
			#{userId},			#{userNm}
		)
	</insert>

	<update id="updateData" parameterType="exampleVO">
		/*	관점설정 수정	example.updateData	*/
		UPDATE	EXAMPLE_PERSPECTIVE
			SET	PERSPECTIVE_NM = #{perspectiveNm},
				SORT_ORDER = #{sortOrder},
				ETC = #{etc},
				AMT = #{amt},
				MODIFY_DT = SYSDATE,
				DELETE_DT = DECODE(#{useYn}, 'Y', NULL, SYSDATE),
				USER_ID = #{userId},
				USER_NM = #{userNm}
		WHERE	YEAR = #{year}
			AND	PERSPECTIVE_ID = #{perspectiveId}
	</update>

	<update id="deleteData" parameterType="exampleVO">
		/* 관점설정 삭제	example.deleteData */
		UPDATE	EXAMPLE_PERSPECTIVE
			SET	DELETE_DT = SYSDATE
		WHERE	YEAR = #{findYear}
			AND PERSPECTIVE_ID IN
			<foreach collection="keys" item="key" open="(" close=")" separator=",">
				#{key}
			</foreach>
	</update>
	
	<select id="selectUserList" parameterType="exampleVO" resultType="exampleVO">
		/* 담당자 목록 조회	example.selectUserList */
		SELECT	USER_ID,
				USER_NM
		FROM	COM_USERINFO
		WHERE	BEING_YN = 'Y'
		ORDER BY	USER_NM
	</select>
	
	<select id="selectScDeptList" parameterType="exampleVO" resultType="exampleVO">
		/* 부서 목록 조회	example.selectScDeptList */
		SELECT
				A.SC_DEPT_ID,		A.SC_DEPT_NM,
				A.UP_SC_DEPT_ID,	A.SC_DEPT_GRP_ID,	A.SORT_ORDER,
				A.BSC_USER_ID,		B.USER_NM	AS BSC_USER_NM,	A.MANAGER_USER_ID,
				C.USER_NM	AS MANAGER_USER_NM,
				DECODE(DELETE_DT, NULL, 'Y', 'N')	AS USE_YN,
				LEVEL, DECODE(CONNECT_BY_ISLEAF, 0, 'false', 'true') AS IS_LEAF,
				'true' AS EXPAND_YN
		FROM	(
					SELECT	SC_DEPT_ID,			SC_DEPT_NM,
							UP_SC_DEPT_ID,	SC_DEPT_GRP_ID,		SORT_ORDER,
							BSC_USER_ID,	MANAGER_USER_ID,	DELETE_DT
					FROM	EXAMPLE_BSC_SC_DEPT
					WHERE	1=1
						AND	YEAR = #{findYear}
						AND	DELETE_DT IS NULL
				) A
				LEFT JOIN COM_USERINFO B
					ON	A.BSC_USER_ID = B.USER_ID
				LEFT JOIN COM_USERINFO C
					ON	A.MANAGER_USER_ID = C.USER_ID
		CONNECT BY	PRIOR SC_DEPT_ID = UP_SC_DEPT_ID
		START WITH UP_SC_DEPT_ID IS NULL
		ORDER SIBLINGS BY	SORT_ORDER
	</select>

	<insert id="insertScDeptData" parameterType="scDeptVO">
		/*	저장	example.insertScDeptData	*/
		INSERT	INTO	EXAMPLE_BSC_SC_DEPT	(
			YEAR,				SC_DEPT_ID,
			SC_DEPT_NM,		UP_SC_DEPT_ID,		SC_DEPT_GRP_ID,
			BSC_USER_ID,	MANAGER_USER_ID,	SORT_ORDER,
			CREATE_DT
		) VALUES (
			#{year},			#{scDeptId},
			#{scDeptNm},	#{upScDeptId},		#{scDeptGrpId},
			#{bscUserId},	#{managerUserId},	#{sortOrder},
			SYSDATE
		)
	</insert>

	<update id="updateScDeptData" parameterType="scDeptVO">
		/*	수정	example.updateScDeptData	*/
		UPDATE	EXAMPLE_BSC_SC_DEPT
			SET	SC_DEPT_NM = #{scDeptNm},
				SORT_ORDER = #{sortOrder},
				CONTENT = #{content},
				BSC_USER_ID = #{bscUserId},
				MANAGER_USER_ID = #{managerUserId},
				MODIFY_DT = SYSDATE,
				DELETE_DT = DECODE(#{useYn}, 'Y', NULL, SYSDATE)
		WHERE	YEAR = #{year}
			AND	SC_DEPT_ID = #{scDeptId}
	</update>

	<update id="deleteScDeptData" parameterType="scDeptVO">
		/* 삭제	example.deleteScDeptData */
		UPDATE	EXAMPLE_BSC_SC_DEPT
			SET	DELETE_DT = SYSDATE
		WHERE	YEAR = #{findYear}
			AND SC_DEPT_ID IN
			<foreach collection="keys" item="key" open="(" close=")" separator=",">
				#{key}
			</foreach>
	</update> 
</mapper>