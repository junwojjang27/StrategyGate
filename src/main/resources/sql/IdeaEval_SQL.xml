<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="system.menu.ideaEval">
	<select id="selectList" parameterType="ideaEvalVO" resultType="ideaEvalVO">
		/*	평가하기 조회	system.menu.ideaEval.selectList */
		SELECT
			A.IDEA_CD,
			A.YEAR,
			A.USER_ID,
			CA.CODE_NM AS CATEGORY,
			A.TITLE,
			A.CONTENT,
			CB.CODE_NM AS STATE,
			A.CREATE_DT,
			A.UPDATE_DT,
			A.DELETE_DT,
			A.ATCH_FILE_ID AS ATCH_FILE_KEY,
			TO_CHAR(A.START_DT, 'YYYY.MM.DD') AS START_DT,
			TO_CHAR(A.END_DT, 'YYYY.MM.DD') AS END_DT,
			A.ATCH_FILE_ID,
			CC.CODE_NM AS IDEA_GBN_CD,
			CD.CODE_NM AS DEGREE,
			CE.CODE_NM AS EVAL_STATE,
		    B.USER_NM
		FROM IDEA_INFO A
			LEFT JOIN V_ROLE_USER B
				ON A.USER_ID = B.USER_ID
					<include refid="common.func.getCodeJoin">
						<property name="pYear" value="#{findYear}"/>
						<property name="pCodeGrpId" value="'385'"/>
						<property name="pAlias" value="CA"/>
						<property name="pCompareColumn" value="A.CATEGORY"/>
					</include>
					<include refid="common.func.getCodeJoin">
						<property name="pYear" value="#{findYear}"/>
						<property name="pCodeGrpId" value="'390'"/>
						<property name="pAlias" value="CB"/>
						<property name="pCompareColumn" value="A.STATE"/>
					</include>
					<include refid="common.func.getCodeJoin">
						<property name="pYear" value="#{findYear}"/>
						<property name="pCodeGrpId" value="'389'"/>
						<property name="pAlias" value="CC"/>
						<property name="pCompareColumn" value="A.IDEA_GBN_CD"/>
					</include>
					<include refid="common.func.getCodeJoin">
						<property name="pYear" value="#{findYear}"/>
						<property name="pCodeGrpId" value="'387'"/>
						<property name="pAlias" value="CD"/>
						<property name="pCompareColumn" value="A.DEGREE"/>
					</include>
					<include refid="common.func.getCodeJoin">
						<property name="pYear" value="#{findYear}"/>
						<property name="pCodeGrpId" value="'391'"/>
						<property name="pAlias" value="CE"/>
						<property name="pCompareColumn" value="A.EVAL_STATE"/>
					</include>
		WHERE 1=1
			AND A.YEAR = #{findYear}    <!--년도가 같을 때-->
			AND A.EVAL_STATE='002'
			<if test='findEvalDegreeId != null and findEvalDegreeId == "001"'>
				AND A.DEGREE = '001'
			</if>
			<if test='findEvalDegreeId != null and findEvalDegreeId == "002"'>
				AND A.DEGREE = '002'
			</if>
			<if test='findEvalDegreeId != null and findEvalDegreeId == "003"'>
				AND A.DEGREE = '003'
			</if>
			<if test='findCategory != null and findCategory != ""'>
				AND A.CATEGORY = #{findCategory}
			</if>
			AND UPPER(B.USER_NM) LIKE '%' || TRIM(UPPER(#{findUserNm})) ||'%'
		ORDER BY A.END_DT, A.START_DT
	</select>

	<select id="selectItemList" parameterType="ideaEvalVO" resultType="ideaEvalVO">
		/*	평가하기 > 평가항목 조회	system.menu.ideaEval.selectItemList */
		SELECT
			A.EVAL_ITEM_TITLE,
			A.EVAL_ITEM_CONTENT,
			A.WEIGHT_ID,
			A.EVAL_DEGREE_ID,
			A.EVAL_ITEM_CD,
			A.YEAR,
			B.EVAL_CD,
		    B.EVAL_GRADE,
		    C.EVAL_SUM
		FROM IDEA_EVAL_ITEM A
			LEFT JOIN IDEA_EVAL_SCORE B
				ON A.EVAL_ITEM_CD = B.EVAL_ITEM_CD AND B.EVAL_USER_ID = #{loginUserId} AND B.IDEA_CD = #{ideaCd}
			LEFT JOIN IDEA_EVAL_INFO C
				ON B.EVAL_USER_ID = C.USER_ID AND B.IDEA_CD = C.IDEA_CD
		WHERE A.YEAR = #{year}
		  	AND A.WEIGHT_ID!='0'
			<if test='degree != null and degree == "001"'>
				AND A.EVAL_DEGREE_ID = '001'
			</if>
			<if test='degree != null and degree == "002"'>
				AND A.EVAL_DEGREE_ID = '002'
			</if>
			<if test='degree != null and degree == "003"'>
				AND A.EVAL_DEGREE_ID = '003'
			</if>
		ORDER BY	A.WEIGHT_ID DESC
	</select>
	
	<select id="selectDetail" parameterType="ideaEvalVO" resultType="ideaEvalVO">
		/*	평가하기 상세 조회	 	system.menu.ideaEval.selectDetail	*/
		SELECT
			CA.CODE_NM AS CATEGORY,
			A.TITLE,
			A.CONTENT,
			A.STATE,
		    A.CREATE_DT,
		    A.DEGREE,
		    A.IDEA_CD,
		    A.YEAR,
		    A.IDEA_GBN_CD,
			A.ATCH_FILE_ID AS ATCH_FILE_KEY,
			B.USER_NM,
			B.DEPT_NM
		FROM IDEA_INFO A
				 LEFT JOIN V_ROLE_USER B
						   ON A.USER_ID = B.USER_ID
								<include refid="common.func.getCodeJoin">
									<property name="pYear" value="#{findYear}"/>
									<property name="pCodeGrpId" value="'385'"/>
									<property name="pAlias" value="CA"/>
									<property name="pCompareColumn" value="A.CATEGORY"/>
								</include>
		WHERE A.IDEA_CD = #{ideaCd}
		  AND A.YEAR = #{findYear}

	</select>	
	
	<!-- 
	<update id="updateSortOrder" parameterType="ideaEvalVO">
	    /*	평가하기 정렬순서저장	 ideaEval.updateSortOrder	*/
		updateSortOrderQuery
	</update>
	-->
	
	<update id="deleteIdeaEval" parameterType="ideaEvalVO">
		/*	평가하기 삭제	system.menu.ideaEval.deleteIdeaEval	*/
		UPDATE IDEA_INFO
		SET
			DELETE_DT = SYSDATE
		WHERE 1=1
			AND IDEA_CD=#{ideaCd}
			AND YEAR=#{year}
			AND CREATE_DT=#{createDt}

	</update>

	<insert id="insertData" parameterType="ideaEvalVO">
		/*	평가하기 저장	system.menu.ideaEval.insertData	*/
		INSERT INTO IDEA_EVAL_SCORE(
			EVAL_CD,
		    YEAR,
		    IDEA_CD,
		    EVAL_ITEM_CD,
		    EVAL_USER_ID,
		    EVAL_GRADE,
		    CREATE_DT,
		    UPDATE_DT,
		    DELETE_DT,
		    EVAL_DEGREE
		)
		VALUES (
			#{evalCd},
			#{year},
			#{ideaCd},
			#{evalItemCd},
			#{evalUserId},
			#{evalGrade},
			SYSDATE,
			#{updateDt},
			#{deleteDt},
			#{evalDegree}
		)
	</insert>

	<update id="updateData" parameterType="ideaEvalVO">
		/*	평가하기 수정	system.menu.ideaEval.updateData	*/
		UPDATE IDEA_EVAL_SCORE
		SET
			EVAL_GRADE=#{evalGrade},
			UPDATE_DT=SYSDATE
		WHERE YEAR=#{year}
			AND EVAL_USER_ID=#{evalUserId}
		    AND EVAL_ITEM_CD=#{evalItemCd}

	</update>

	<insert id="submitData" parameterType="ideaEvalVO">
		/*	평가하기 제출	system.menu.ideaEval.submitData	*/
		INSERT INTO IDEA_EVAL_INFO(
			EVAL_CD,
			YEAR,
			IDEA_CD,
			USER_ID,
			EVAL_SUM,
			EVAL_DEGREE,
			CREATE_DT,
			UPDATE_DT,
			DELETE_DT,
			IDEA_GBN_CD
		)
		VALUES (
				   (SELECT DISTINCT EVAL_CD FROM IDEA_EVAL_SCORE WHERE IDEA_CD = #{ideaCd} AND EVAL_USER_ID = #{userId}),
				   #{year},
				   #{ideaCd},
				   #{userId},
				   #{evalSum},
				   #{evalDegree},
				   SYSDATE,
				   #{updateDt},
				   #{deleteDt},
				   #{ideaGbnCd}
			   )
	</insert>
</mapper>

