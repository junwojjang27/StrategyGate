* 로그인 프로세스 (Spring Security) 정리
- 작성자 : kimyh
- 작성일 : 2018.03.05
- 수정일 : 2018.03.05

=====================
1. 로그인 프로세스
=====================
1) 도메인 접속 (예) http://localhost:8080/StrategyGate

2) /src/main/webapp/index.jsp 에서 login.do로 redirect

3) /common/login.jsp 로 이동
	- CommonController.java의 login 메소드에서 처리

4) 로그인 실행 url 호출
	- /loginProcess.do

5) context-security.xml 의 login-processing-url="/loginProcess.do" 에서 해당 url 요청을 받음

6) context-security.xml 의 authentication-manager에 선언된 CustomAuthenticationProvider class의 authenticate 메소드에서 로그인 처리
	- DB에서 사용자 정보 조회 & 패스워드 비교

6-1) 사용자 정보가 없거나 패스워드가 틀린 경우
	- context-security.xml 의 authentication-failure-url 로 이동

6-2) 로그인 정보가 유효한 경우
	- 1. 해당 사용자의 권한 목록 조회
	- 2. 사용자 정보와 권한 목록으로 AuthenticationToken을 생성
	- 3. context-security.xml 의 authentication-success-handler-ref 호출

7) CustomLoginSuccessHandler.onAuthenticationSuccess 실행
	- 세션에 compId, userId, 로케일, lang 저장
	- 세션에 loginVO 저장 (전자정부프레임워크에서 세션의 로그인 유저 정보를 가져올 때 "loginVO"를 찾음)
	- 세션에 "menuList" 저장 (해당 사용자가 접근 가능한 메뉴 리스트)
	- 세션에 "menuMap" 저장
		- 메인 화면의 메뉴 생성에 사용함
	- 접근권한 map 생성해서 userVO의 requestMap에 넣음 (차후 url 접근시 권한 판단에 사용)
		- DB에서 menuList 조회시 해당 url 외에 url pattern도 만들어둔 것을 사용
			- 예) /system/system/menu/menuMng/menuMngList.do	-> /system/system/menu/menuMng/*.do
			이렇게 해서 해당 url과 같은 경로 내의 url 접근은 가능하도록 처리하고
			그 외 url을 접근할 경우 권한 없음 처리

8) defaultUrl로 redirect
	- context-security.xml 의 customLoginSuccessHandler 설정에 선언되어있음
	- 현재는 /main.do
	

=====================
2. 권한 체크
=====================
- url 이동
- filterSecurityInterceptor의 CustomSecurityMetadataSource 에서 해당 url의 권한 확인
	- 해당 url이 permittedUrlList에 포함되는지 확인하고 포함되면 통과
	- 해당 url이 userVO.getRequestMap()의 url 패턴들에 존재하면 통과
		- 존재하지 않으면 권한 없음 오류 발생

=====================
3. 설정 관련 파일들
=====================
- /src/main/resources/config/context-security.xml
	- Spring Security 설정 & 관련 class들 선언
	- 권한 체크 설정
- /src/main/resources/config/context-password.xml
	- 사용자 패스워드 암호화(SHA-256) 관련 bean 선언
- /src/main/resources/config/servlet-context.xml
	- referer 체크 url 설정 (bean id="customSecurityMetadataSource")

=====================
4. 참고한 사이트
=====================
- http://zgundam.tistory.com/category/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/Spring%20Security
